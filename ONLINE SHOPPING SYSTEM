mkdr online-shopping-system
cd online-shopping-system
git init
touch main.cpp
echo "// Online shopping System in C++">main.cpp
git add .
git commit -m "initialized project structure and Git repository."

    #include <iostream>
    #include <vector>
    using namespace std;

    class product {
     public:
      int id;
      string name;
      double price;
      int stock;

      product(int p-id,string p-name,double p_price,int p_stock){
         id = p_id;
         name = p_name;
         price = p_price;
         stock = p_stock;
      }
    };

     class cart {
        public:
            vector<pair<product, int >> items;
            void add product(Product product, int quantity) {
                items .push_back(make_pair(product, quantity));

            }
         };
vector<Product> productList;

void  addProduct(int id, string name, double price, int stock)
{
    Product newProduct(id, name, price, stock);
    productList.push_back(newProduct);
        cout<<"Produt added: " << name << endl;
        }

 void listProducts() {
    cout << "Available Product:" << endl;
        for (auto &product :productList){
            cout << "ID: " << Product.id << ",Name: "<< product.name
                    << ", Price: " << product.price << ", Stock: " << product.stock << endl;     
         }
 }

 void editProduct(int id, string newName, double newPrice,int newStock) {
    for(auto &product :product){
        if (product.id == id){
            product.name =
  newName;
             product.price =
  newPrice;    
             product.stock =
  newStock;
             cout << "Product update: " << newName << endl;
             return;
            
            }
    }
    cout << "Product not found!" << endl;
 }
 void deleteProduct(int id) {

  productList .erase(remove_if(productList.begin(),productList.end(),

  [id](Product &product) { return product.id == id;}),

  productList.end());
    cout << "Product deleted!" << endl;
     }

 int main() {
    addProduct(1, "Laptop",1000.0,  5);
    addProduct(2,"Mouse", 25.0, 50);
    listProducts();
    editProduct(1, "Gaming Laptop", 1500.0, 3);
    listProducts();
    deleteProduct(2);
    listProducts();
    return 0;
 } 


 Cart cart;

 void addToCart(int productId, int quantity){
    for (auto &product :productList){
        if (product.id == productId){
            if(product.stock >= quantity){
 cart.addProduct(product,quantity);
        product.stock-= quantity;
        cout << quantity << " x " << product.name << " added to cart." << endl;
            }else{
                cout << "Not enough stock!" << endl;
            }
                        return;
             }
    }
    cout <<"product not found!" << endl;
 }

 void viewCart() {
    cout << "Cart Items:" << endl;
    for(auto &item :cart.items) {
        cout << item.second << " x " << item.first.name << " -Total: "
             << item.second * item.first.price << endl;             
           }
 }

 void removeFromCart(int productId){
 cart.items.erase(remove_if(cart.items.begin(),
 cart.items.end(),

[productId] (pair<Product, int> &item) {

 return item.first.id == productId;   
}),

cart.Items.end());
    cout << "Product removed from cart!" << endl;
     }


     void updateCartQuantity(int productId, int newQuantity){
        for (auto &item :cart.item) {
            if (item.first.id == productId) {
                item.second = newQuantity;
                        cout << "Cart update!" << endl;
                            return;    
            }
        }
        cout << "Product not found in cart!" << endl;

     }


     int main(){
        //Test cart features
        addToCart(1 , 2);
        viewCart();
        updateCartQuantity(1 , 3);
        viewCart();
        removeFromCart(1);
        viewCart();
        return 0;
     } 

     void checkout() {
        double total = 0;
        for (auto &item : cart.items){
            total += item.first.price * item.second;
        }
            cout << "Total amount: $" << total << ". Payment processed!" << endl;
                cart.items.clear();
     }


     int main() {
        addProduct(3, "Keyboad", 50.0, 10);
        addToCart(3, 2);
        viewCart();
        checkout();
        return 0;
     }
     

              





